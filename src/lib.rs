//! This crate provides implementations of *FM-Index* and its variants.
//!
//! FM-Index, originally proposed by Paolo Ferragina and Giovanni Manzini [^1],
//! is a compressed full-text index which supports the following queries:
//!
//! - `count`: Given a pattern string, counts the number of its occurrences.
//! - `locate`: Given a pattern string, lists all positions of its occurrences.
//! - `extract`: Given an integer, gets the character of the text at that
//!   position.
//!
//! `fm-index` crate does not support the third query (extracting a character
//! from arbitrary position). Instead, it provides backward/forward iterators
//! that return the text characters starting from a search result.
//!
//! # Implementations
//!
//! ## FM-Index ([`FMIndex`], [`FMIndexWithLocate`])
//!
//! This is a fast implementation of a succinct full-text index. For most use
//! cases this is the best choice.
//!
//! The implementation is based on [^1]. The index is constructed with a suffix
//! array generated by SA-IS [^3] in _O(n)_ time, where _n_ is the size of a
//! text string.
//!
//! Basically it consists of
//!
//! - a Burrows-Wheeler transform (BWT) of the text string represented with
//!   _wavelet matrix_ [^4]
//! - an array of size _O(σ)_ (_σ_: number of characters) which stores the
//!   number of characters smaller than a given character
//! - a (sampled) suffix array
//!
//! ## Run-Length FM-Index ([`RLFMIndex`], [`RLFMIndexWithLocate`])
//!
//! This index is more compact than FM-Index if there are a lot of repeated
//! patterns in the text. It is slower than FM-Index in general.
//!
//! Based on [^2]. The index is constructed with a suffix array generated by
//! SA-IS [^3].
//!
//! It consists of
//!
//! - a wavelet matrix that stores the run heads of BWT of the text string
//! - a succinct bit vector which stores the run lengths of BWT of the text
//!   string
//! - a succinct bit vector which stores the run lengths of BWT of the text
//!   string sorted in alphabetical order of corresponding run heads
//! - an array of size _O(σ)_ (_σ_: number of characters) which stores the
//!   number of characters smaller than a given character in run heads
//!
//! # Reference
//!
//! [^1]: Ferragina, P., & Manzini, G. (2000). Opportunistic data structures
//!     with applications. Annual Symposium on Foundations of Computer Science
//!     \- Proceedings, 390–398. <https://doi.org/10.1109/sfcs.2000.892127>
//!
//! [^2]: Mäkinen, V., & Navarro, G. (2005). Succinct suffix arrays based on
//!     run-length encoding. In Lecture Notes in Computer Science (Vol. 3537).
//!     <https://doi.org/10.1007/11496656_5>
//!
//! [^3]: Ge Nong, Sen Zhang, & Wai Hong Chan. (2010). Two Efficient Algorithms
//!     for Linear Time Suffix Array Construction. IEEE Transactions on
//!     Computers, 60(10), 1471–1484. <https://doi.org/10.1109/tc.2010.188>
//!
//! [^4]: Claude F., Navarro G. (2012). The Wavelet Matrix. In:
//!     Calderón-Benavides L., González-Caro C., Chávez E., Ziviani N. (eds)
//!     String Processing and Information Retrieval. SPIRE 2012.
//!     <https://doi.org/10.1007/978-3-642-34109-0_18>
#![allow(clippy::len_without_is_empty)]
#![warn(missing_docs)]

mod backend;
mod character;
mod error;
mod fm_index;
mod frontend;
mod heap_size;
mod multi_pieces;
mod piece;
mod rlfmi;
mod suffix_array;
#[cfg(test)]
mod testutil;
mod text;
mod util;
mod wrapper;

pub use character::Character;
pub use error::Error;
pub use frontend::{
    FMIndex, FMIndexMatch, FMIndexMatchWithLocate, FMIndexMultiPieces, FMIndexMultiPiecesMatch,
    FMIndexMultiPiecesMatchWithLocate, FMIndexMultiPiecesSearch,
    FMIndexMultiPiecesSearchWithLocate, FMIndexMultiPiecesWithLocate, FMIndexSearch,
    FMIndexSearchWithLocate, FMIndexWithLocate, Match, MatchWithLocate, MatchWithPieceId,
    RLFMIndex, RLFMIndexMatch, RLFMIndexMatchWithLocate, RLFMIndexSearch,
    RLFMIndexSearchWithLocate, RLFMIndexWithLocate, Search, SearchIndex,
    SearchIndexWithMultiPieces,
};
pub use piece::PieceId;
pub use text::Text;

#[doc = include_str!("../README.md")]
#[cfg(doctest)]
pub struct ReadmeDoctests;
